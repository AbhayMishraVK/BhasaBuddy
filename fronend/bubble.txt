App.js
import React from 'react';
import LanguageBubble from './LanguageBubble';

export function App(props) {
  return (
    <div className='App'>
      <LanguageBubble/>
    </div>
  );
}

// Log to console
console.log('Hello console');


LangaugeBubble.css
.language-bubbles-container {
  position: relative;
}

.language-bubble {
  position: absolute;
  font-size: 16px;
  background-color: rgba(255, 255, 255, 0.5); /* Transparent background color */
  color: white;
  border-radius: 50%;
  padding: 8px 12px;
  animation: swirl 5s linear infinite;
}

@keyframes swirl {
  0% {
    transform: translateX(0) translateY(0) rotate(0);
  }
  100% {
    transform: translateX(-50%) translateY(-50%) rotate(360deg); /* Adjust rotation */
  }
}

@keyframes floatUpwards {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-100vh); /* Adjust the distance the bubbles float */
  }
}

@keyframes sparkle {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.8;
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.8); /* Adjust the shadow color and intensity */
  }
  100% {
    opacity: 1;
  }
}

/* Define colors with transparency for each language bubble */
.language-bubble:nth-child(1) { background-color: rgba(255, 111, 97, 0.8); } /* Red with 80% opacity */
.language-bubble:nth-child(2) { background-color: rgba(107, 91, 149, 0.8); } /* Purple with 80% opacity */
.language-bubble:nth-child(3) { background-color: rgba(254, 178, 54, 0.8); } /* Orange with 80% opacity */
.language-bubble:nth-child(4) { background-color: rgba(214, 65, 97, 0.8); } /* Pink with 80% opacity */
.language-bubble:nth-child(5) { background-color: rgba(30, 144, 255, 0.8); } /* Blue with 80% opacity */
.language-bubble:nth-child(6) { background-color: rgba(100, 181, 246, 0.8); } /* Light Blue with 80% opacity */
.language-bubble:nth-child(7) { background-color: rgba(0, 184, 148, 0.8); } /* Green with 80% opacity */
.language-bubble:nth-child(8) { background-color: rgba(231, 76, 60, 0.8); } /* Tomato with 80% opacity */


LangaugeBubble.js
import React, { useEffect, useState } from 'react';
import './LanguageBubble.css';

const LanguageBubble = () => {
  const [bubbles, setBubbles] = useState([]);

  // Generate a random word
  const getRandomWord = () => {
    const words = ['Hello', 'Bonjour', 'Hola', 'Ciao', 'नमस्ते', 'こんにちは', '안녕하세요', 'مرحبا'];
    return words[Math.floor(Math.random() * words.length)];
  };

  // Generate a random position for the bubble within the window size
  const getRandomPosition = () => {
    const position = {
      left: Math.random() * (window.innerWidth - 100) + 'px', // Subtract bubble width to keep it within the window
      top: Math.random() * (window.innerHeight - 100) + 'px', // Subtract bubble height to keep it within the window
    };
    return position;
  };

  // Create new bubbles
  const createBubbles = () => {
    const newBubbles = Array.from({ length: 10 }, (_, index) => ({
      id: index,
      word: getRandomWord(),
      position: getRandomPosition(),
    }));
    setBubbles(newBubbles);
  };

  useEffect(() => {
    // Create bubbles when the component mounts
    createBubbles();

    // Animate bubbles to float upwards
    const animationInterval = setInterval(() => {
      createBubbles();
    }, 5000); // Adjust the interval as needed

    // Cleanup function
    return () => clearInterval(animationInterval);
  }, []);

  return (
    <div className="language-bubbles-container">
      {bubbles.map((bubble) => (
        <div key={bubble.id} className="language-bubble" style={bubble.position}>
          {bubble.word}
        </div>
      ))}
    </div>
  );
};

export default LanguageBubble;
